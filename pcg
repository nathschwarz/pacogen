#!/bin/bash

# Author:   Nathan Schwarz
# Mail:     nathan.notwhite@gmail.com
# Github:   github.com/nathschwarz
# Jabber:   nath_schwarz@jabber.de

#Get options
while getopts t:p:h opt
do
   case $opt in
        t) templatename=$OPTARG;;
        p) profilename=$OPTARG;;
        h) printhelp=true;;
   esac
done
shift $((OPTIND-1))

#Print help, then exit
if [[ -n $printhelp ]]; then
    printf "PaCoGen - passive code generator\n"
    printf "\t-t\tName of the template to use\n"
    printf "\t-p\tName of the profile to use\n"
    printf "\t-h\tPrint this help\n"
#    printf "\t-\t\n"
    exit
fi

#Initiate default values for variables
filename=$(echo "$1" | cut -d . -f 1)
FILENAME=$filename
fileextension=$(echo "$1" | cut -d . -f 2)
if [[ -z $templatename ]]; then
    templatename="template"
fi
if [[ -z $profilename ]]; then
    profilename="default"
fi
if [[ -z $PACOGEN_PROFILES ]]; then
    PACOGEN_PROFILES="~/pacogen"
fi
if [[ -z $PACOGEN_TEMPLATES ]]; then
    PACOGEN_TEMPLATES="~/pacogen/templates"
fi

#Source profile-information
profilefile="$PACOGEN_PROFILES"/"$profilename".profile 
if [[ ! -e "$profilefile" ]]; then
    printf "Profile file %s in %s not found, exiting.\n" "$profilename" "$PACOGEN_PROFILES"
    exit
else
    source "$profilefile"
    profilepresets=$(cut -s -d= -f1 "$profilefile")
fi

#Copy template file to target and replace placeholders with info
templatefile="$PACOGEN_TEMPLATES"/"$templatename"."$fileextension"
if [[ ! -e "$templatefile" ]]; then
    printf "Template file %s in %s not found, exiting.\n" "$templatename" "$PACOGEN_TEMPLATES"
    exit
else
    cp "$templatefile" "$1"
    for profilepreset in $profilepresets; do
        sed -e "s/$profilepreset/$(eval echo \$$profilepreset)/g" -i "$1" 
    done
fi
